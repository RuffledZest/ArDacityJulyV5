{
    "name": "ar-retro-toaster",
    "type": "registry:component",
    "dependencies": [
      "lucide-react"
    ],
    "registryDependencies": [],
    "files": [
      {
        "type": "registry:component",
        "content": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { CheckCircle, XCircle, AlertCircle, Info, X } from \"lucide-react\"\n\ninterface Toast {\n  id: string\n  type: \"success\" | \"error\" | \"warning\" | \"info\"\n  title?: string\n  message: string\n  duration?: number\n}\n\ninterface RetroToasterProps {\n  primaryColor?: string\n  secondaryColor?: string\n  textColor?: string\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\"\n}\n\nlet toastId = 0\nconst toasts: Toast[] = []\nconst listeners: ((toasts: Toast[]) => void)[] = []\n\nexport const toast = {\n  success: (message: string, title?: string, duration = 5000) => {\n    addToast({ type: \"success\", message, title, duration })\n  },\n  error: (message: string, title?: string, duration = 5000) => {\n    addToast({ type: \"error\", message, title, duration })\n  },\n  warning: (message: string, title?: string, duration = 5000) => {\n    addToast({ type: \"warning\", message, title, duration })\n  },\n  info: (message: string, title?: string, duration = 5000) => {\n    addToast({ type: \"info\", message, title, duration })\n  },\n}\n\nfunction addToast(toast: Omit<Toast, \"id\">) {\n  const newToast = { ...toast, id: (++toastId).toString() }\n  toasts.push(newToast)\n  listeners.forEach((listener) => listener([...toasts]))\n  if (toast.duration && toast.duration > 0) {\n    setTimeout(() => removeToast(newToast.id), toast.duration)\n  }\n}\n\nfunction removeToast(id: string) {\n  const index = toasts.findIndex((toast) => toast.id === id)\n  if (index > -1) {\n    toasts.splice(index, 1)\n    listeners.forEach((listener) => listener([...toasts]))\n  }\n}\n\nexport function RetroToaster({\n  primaryColor = \"#2d2d2d\",\n  secondaryColor = \"#f5f5dc\",\n  textColor = \"#2d2d2d\",\n  position = \"top-right\",\n}: RetroToasterProps) {\n  const [toastList, setToastList] = useState<Toast[]>([])\n\n  useEffect(() => {\n    const listener = (newToasts: Toast[]) => setToastList(newToasts)\n    listeners.push(listener)\n    return () => {\n      const index = listeners.indexOf(listener)\n      if (index > -1) listeners.splice(index, 1)\n    }\n  }, [])\n\n  const positionClasses = {\n    \"top-right\": \"top-4 right-4\",\n    \"top-left\": \"top-4 left-4\",\n    \"bottom-right\": \"bottom-4 right-4\",\n    \"bottom-left\": \"bottom-4 left-4\",\n  }\n\n  const typeConfig = {\n    success: { icon: CheckCircle, bgColor: \"#dcfce7\", borderColor: \"#22c55e\" },\n    error: { icon: XCircle, bgColor: \"#fee2e2\", borderColor: \"#ef4444\" },\n    warning: { icon: AlertCircle, bgColor: \"#fef3c7\", borderColor: \"#f59e0b\" },\n    info: { icon: Info, bgColor: \"#dbeafe\", borderColor: \"#3b82f6\" },\n  }\n\n  return (\n    <div className={`fixed z-50 space-y-2 ${positionClasses[position]}`}>\n      {toastList.map((toast) => {\n        const config = typeConfig[toast.type]\n        const Icon = config.icon\n        return (\n          <div\n            key={toast.id}\n            className=\"flex items-start gap-3 p-4 rounded-lg border-2 min-w-80 animate-in slide-in-from-right duration-300\"\n            style={{\n              backgroundColor: config.bgColor,\n              borderColor: config.borderColor,\n              boxShadow: `4px 4px 0px ${config.borderColor}`,\n              color: textColor,\n            }}\n          >\n            <Icon className=\"w-5 h-5 mt-0.5 flex-shrink-0\" style={{ color: config.borderColor }} />\n            <div className=\"flex-1\">\n              {toast.title && (\n                <h4 className=\"font-mono font-bold text-sm mb-1\" style={{ color: textColor }}>\n                  {toast.title}\n                </h4>\n              )}\n              <p className=\"font-mono text-sm\" style={{ color: textColor }}>\n                {toast.message}\n              </p>\n            </div>\n            <button\n              onClick={() => removeToast(toast.id)}\n              className=\"p-1 rounded transition-all duration-200 hover:scale-110\"\n              style={{\n                backgroundColor: config.borderColor,\n                color: config.bgColor,\n              }}\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        )\n      })}\n    </div>\n  )\n}",
        "path": "components/ardacity/ar-retro-toaster.tsx",
        "target": "components/ardacity/ar-retro-toaster.tsx"
      }
    ]
  }