{
    "name": "liquid-glass-dock",
    "type": "registry:component",
    "dependencies": [
      "motion"
      
    ],
    "registryDependencies": [],
    "files": [
      {
        "type": "registry:component",
        "content": "\"use client\"\n\nimport type React from \"react\"\nimport { memo, useCallback, useEffect, useRef, useState } from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { animate } from \"motion/react\"\n\ninterface DockProps {\n  className?: string\n  position?: \"bottom\" | \"left\" | \"right\"\n}\n\ninterface DockItem {\n  id: string\n  name: string\n  icon: string\n  isActive?: boolean\n}\n\nconst GlowingEffect = memo(\n  ({\n    blur = 0,\n    inactiveZone = 0.01,\n    proximity = 64,\n    spread = 40,\n    variant = \"default\",\n    glow = true,\n    className,\n    disabled = false,\n    movementDuration = 2,\n    borderWidth = 1,\n  }: {\n    blur?: number\n    inactiveZone?: number\n    proximity?: number\n    spread?: number\n    variant?: \"default\" | \"white\"\n    glow?: boolean\n    className?: string\n    disabled?: boolean\n    movementDuration?: number\n    borderWidth?: number\n  }) => {\n    const containerRef = useRef<HTMLDivElement>(null)\n    const lastPosition = useRef({ x: 0, y: 0 })\n    const animationFrameRef = useRef<number>(0)\n\n    const handleMove = useCallback(\n      (e?: MouseEvent | { x: number; y: number }) => {\n        if (!containerRef.current) return\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current)\n        }\n        animationFrameRef.current = requestAnimationFrame(() => {\n          const element = containerRef.current\n          if (!element) return\n          const { left, top, width, height } = element.getBoundingClientRect()\n          const mouseX = e?.x ?? lastPosition.current.x\n          const mouseY = e?.y ?? lastPosition.current.y\n          if (e) {\n            lastPosition.current = { x: mouseX, y: mouseY }\n          }\n          const center = [left + width * 0.5, top + height * 0.5]\n          const distanceFromCenter = Math.hypot(mouseX - center[0], mouseY - center[1])\n          const inactiveRadius = 0.5 * Math.min(width, height) * inactiveZone\n          if (distanceFromCenter < inactiveRadius) {\n            element.style.setProperty(\"--active\", \"0\")\n            return\n          }\n          const isActive =\n            mouseX > left - proximity &&\n            mouseX < left + width + proximity &&\n            mouseY > top - proximity &&\n            mouseY < top + height + proximity\n          element.style.setProperty(\"--active\", isActive ? \"1\" : \"0\")\n          if (!isActive) return\n          const currentAngle = Number.parseFloat(element.style.getPropertyValue(\"--start\")) || 0\n          const targetAngle = (180 * Math.atan2(mouseY - center[1], mouseX - center[0])) / Math.PI + 90\n          const angleDiff = ((targetAngle - currentAngle + 180) % 360) - 180\n          const newAngle = currentAngle + angleDiff\n          animate(currentAngle, newAngle, {\n            duration: movementDuration,\n            ease: [0.16, 1, 0.3, 1],\n            onUpdate: (value) => {\n              element.style.setProperty(\"--start\", String(value))\n            },\n          })\n        })\n      },\n      [inactiveZone, proximity, movementDuration],\n    )\n\n    useEffect(() => {\n      if (disabled) return\n      const handleScroll = () => handleMove()\n      const handlePointerMove = (e: PointerEvent) => handleMove(e)\n      window.addEventListener(\"scroll\", handleScroll, { passive: true })\n      document.body.addEventListener(\"pointermove\", handlePointerMove, {\n        passive: true,\n      })\n      return () => {\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current)\n        }\n        window.removeEventListener(\"scroll\", handleScroll)\n        document.body.removeEventListener(\"pointermove\", handlePointerMove)\n      }\n    }, [handleMove, disabled])\n\n    return (\n      <>\n        <div\n          className={cn(\n            \"pointer-events-none absolute -inset-px hidden rounded-[inherit] border opacity-0 transition-opacity\",\n            glow && \"opacity-100\",\n            variant === \"white\" && \"border-white\",\n            disabled && \"!block\",\n          )}\n        />\n        <div\n          ref={containerRef}\n          style={\n            {\n              \"--blur\": `${blur}px`,\n              \"--spread\": spread,\n              \"--start\": \"0\",\n              \"--active\": \"0\",\n              \"--glowingeffect-border-width\": `${borderWidth}px`,\n              \"--repeating-conic-gradient-times\": \"5\",\n              \"--gradient\":\n                variant === \"white\"\n                  ? `repeating-conic-gradient(\n                  from 236.84deg at 50% 50%,\n                  var(--black),\n                  var(--black) calc(25% / var(--repeating-conic-gradient-times))\n                )`\n                  : `radial-gradient(circle, #dd7bbb 10%, #dd7bbb00 20%),\n                radial-gradient(circle at 40% 40%, #d79f1e 5%, #d79f1e00 15%),\n                radial-gradient(circle at 60% 60%, #5a922c 10%, #5a922c00 20%),\n                 radial-gradient(circle at 40% 60%, #4c7894 10%, #4c789400 20%),\n                repeating-conic-gradient(\n                  from 236.84deg at 50% 50%,\n                  #dd7bbb 0%,\n                  #d79f1e calc(25% / var(--repeating-conic-gradient-times)),\n                  #5a922c calc(50% / var(--repeating-conic-gradient-times)),\n                   #4c7894 calc(75% / var(--repeating-conic-gradient-times)),\n                  #dd7bbb calc(100% / var(--repeating-conic-gradient-times))\n                )`,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"pointer-events-none absolute inset-0 rounded-[inherit] opacity-100 transition-opacity\",\n            glow && \"opacity-100\",\n            blur > 0 && \"blur-[var(--blur)] \",\n            className,\n            disabled && \"!hidden\",\n          )}\n        >\n          <div\n            className={cn(\n              \"glow\",\n              \"rounded-[inherit]\",\n              'after:content-[\"\"] after:rounded-[inherit] after:absolute after:inset-[calc(-1*var(--glowingeffect-border-width))]',\n              \"after:[border:var(--glowingeffect-border-width)_solid_transparent]\",\n              \"after:[background:var(--gradient)] after:[background-attachment:fixed]\",\n              \"after:opacity-[var(--active)] after:transition-opacity after:duration-300\",\n              \"after:[mask-clip:padding-box,border-box]\",\n              \"after:[mask-composite:intersect]\",\n              \"after:[mask-image:linear-gradient(#0000,#0000),conic-gradient(from_calc((var(--start)-var(--spread))*1deg),#00000000_0deg,#fff,#00000000_calc(var(--spread)*2deg))]\",\n            )}\n          />\n        </div>\n      </>\n    )\n  },\n)\n\nGlowingEffect.displayName = \"GlowingEffect\"\n\nexport function LiquidGlassDock({ className, position = \"bottom\" }: DockProps) {\n  const [hoveredItem, setHoveredItem] = useState<string | null>(null)\n  const [activeItems, setActiveItems] = useState<string[]>([\"finder\", \"safari\"])\n\n  const dockItems: DockItem[] = [\n    {\n      id: \"finder\",\n      name: \"Finder\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/finder.png\",\n    },\n    {\n      id: \"maps\",\n      name: \"Maps\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/map.png\",\n    },\n    {\n      id: \"messages\",\n      name: \"Messages\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/messages.png\",\n    },\n    {\n      id: \"notes\",\n      name: \"Notes\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/notes.png\",\n    },\n    {\n      id: \"safari\",\n      name: \"Safari\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/safari.png\",\n    },\n    {\n      id: \"books\",\n      name: \"Books\",\n      icon: \"https://raw.githubusercontent.com/lucasromerodb/liquid-glass-effect-macos/refs/heads/main/assets/books.png\",\n    },\n  ]\n\n  const handleItemClick = (itemId: string) => {\n    setActiveItems((prev) => (prev.includes(itemId) ? prev.filter((id) => id !== itemId) : [...prev, itemId]))\n  }\n\n  return (\n    <>\n      {/* SVG Filter for Liquid Glass Effect */}\n      <svg style={{ display: \"none\" }}>\n        <filter id=\"glass-distortion-dock\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" filterUnits=\"objectBoundingBox\">\n          <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.002 0.008\" numOctaves=\"2\" seed=\"5\" result=\"turbulence\" />\n          <feComponentTransfer in=\"turbulence\" result=\"mapped\">\n            <feFuncR type=\"gamma\" amplitude=\"1.2\" exponent=\"8\" offset=\"0.4\" />\n            <feFuncG type=\"gamma\" amplitude=\"0.1\" exponent=\"1\" offset=\"0.1\" />\n            <feFuncB type=\"gamma\" amplitude=\"0.1\" exponent=\"1\" offset=\"0.6\" />\n          </feComponentTransfer>\n          <feGaussianBlur in=\"turbulence\" stdDeviation=\"4\" result=\"softMap\" />\n          <feSpecularLighting\n            in=\"softMap\"\n            surfaceScale=\"8\"\n            specularConstant=\"1.5\"\n            specularExponent=\"120\"\n            lightingColor=\"white\"\n            result=\"specLight\"\n          >\n            <fePointLight x=\"-150\" y=\"-150\" z=\"400\" />\n          </feSpecularLighting>\n          <feComposite in=\"specLight\" operator=\"arithmetic\" k1=\"0\" k2=\"1.2\" k3=\"1.2\" k4=\"0\" result=\"litImage\" />\n          <feDisplacementMap in=\"SourceGraphic\" in2=\"softMap\" scale=\"300\" xChannelSelector=\"R\" yChannelSelector=\"G\" />\n        </filter>\n      </svg>\n\n      <div\n        className={cn(\n          \"fixed z-50\",\n          position === \"bottom\" && \"bottom-4 left-1/2 transform -translate-x-1/2\",\n          position === \"left\" && \"left-4 top-1/2 transform -translate-y-1/2\",\n          position === \"right\" && \"right-4 top-1/2 transform -translate-y-1/2\",\n          className,\n        )}\n      >\n        <div className=\"liquidGlass-wrapper relative flex font-semibold overflow-hidden text-black cursor-pointer shadow-[0_6px_6px_rgba(0,0,0,0.2),0_0_20px_rgba(0,0,0,0.1)] transition-all duration-[400ms] ease-[cubic-bezier(0.175,0.885,0.32,2.2)] rounded-2xl p-3 hover:p-4 hover:scale-[1.02] hover:shadow-[0_12px_12px_rgba(0,0,0,0.3),0_0_40px_rgba(0,0,0,0.2)]\">\n          {/* Liquid Glass Effect Layer */}\n          <div className=\"liquidGlass-effect absolute z-0 inset-0 [backdrop-filter:blur(3px)] [filter:url(#glass-distortion-dock)] overflow-hidden [isolation:isolate] rounded-2xl\" />\n\n          {/* Tint Layer */}\n          <div className=\"liquidGlass-tint z-[1] absolute inset-0 bg-white/[0.048] rounded-2xl\" />\n\n          {/* Shine Layer */}\n          <div className=\"liquidGlass-shine absolute inset-0 z-[2] overflow-hidden rounded-2xl shadow-[inset_2px_2px_1px_0_rgba(255,255,255,0.5),inset_-1px_-1px_1px_1px_rgba(255,255,255,0.5)]\" />\n\n          {/* Content Layer */}\n          <div\n            className={cn(\n              \"liquidGlass-text z-[3] relative flex items-center gap-2 rounded-xl p-3  backdrop-blur-sm\",\n              position === \"left\" && \"flex-col\",\n              position === \"right\" && \"flex-col\",\n            )}\n          >\n            <GlowingEffect spread={40} glow={true} disabled={false} proximity={64} inactiveZone={0.01} />\n\n            {dockItems.map((item) => (\n              <div key={item.id} className=\"relative\">\n                <button\n                  onClick={() => handleItemClick(item.id)}\n                  onMouseEnter={() => setHoveredItem(item.id)}\n                  onMouseLeave={() => setHoveredItem(null)}\n                  className={cn(\n                    \"relative p-2 rounded-xl transition-all duration-300 group\",\n                    \"hover:bg-white/20 hover:scale-110 active:scale-95\",\n                    hoveredItem === item.id && \"scale-110\",\n                  )}\n                  aria-label={item.name}\n                >\n                  <img\n                    src={item.icon || \"/placeholder.svg\"}\n                    alt={item.name}\n                    className={cn(\"w-12 h-12 transition-all duration-300\", hoveredItem === item.id && \"drop-shadow-lg\")}\n                  />\n\n                  {/* Active indicator */}\n                  {activeItems.includes(item.id) && (\n                    <div\n                      className={cn(\n                        \"absolute w-1 h-1 bg-white rounded-full\",\n                        position === \"bottom\" && \"-bottom-1 left-1/2 transform -translate-x-1/2\",\n                        position === \"left\" && \"-right-1 top-1/2 transform -translate-y-1/2\",\n                        position === \"right\" && \"-left-1 top-1/2 transform -translate-y-1/2\",\n                      )}\n                    />\n                  )}\n\n                  {/* Bounce animation on hover */}\n                  {hoveredItem === item.id && (\n                    <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 bg-black/80 text-white text-xs px-2 py-1 rounded whitespace-nowrap\">\n                      {item.name}\n                    </div>\n                  )}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}",
        "path": "components/ardacity/liquid-glass-dock.tsx",
        "target": "components/ardacity/liquid-glass-dock.tsx"
      }
    ]
  }